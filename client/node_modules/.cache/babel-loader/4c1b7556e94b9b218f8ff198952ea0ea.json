{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Maptwo = () => {\n  _s();\n\n  const [myData, setMyData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const {\n        data\n      } = await axios.get('/api/workspaces');\n      setMyData(data);\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Maptwo, \"t4qxf8XXuxXukv7LfJC+zXl5Zcc=\");\n\n_c = Maptwo;\nexport default Maptwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maptwo\");","map":{"version":3,"sources":["C:/Main Projects/Project 3/name-test/client/src/components/common/Maptwo.js"],"names":["React","useEffect","useState","axios","ReactMapGL","Marker","Popup","Maptwo","myData","setMyData","getData","data","get"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,cAA1C;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAG,YAAY;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,KAAK,CAACS,GAAN,CAAU,iBAAV,CAAvB;AACAH,MAAAA,SAAS,CAACE,IAAD,CAAT;AACD,KAHD;;AAIAD,IAAAA,OAAO;AACR,GANQ,EAMN,EANM,CAAT;AASA,sBACE,qCADF;AAYD,CAxBD;;GAAMH,M;;KAAAA,M;AAyBN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\n\r\nconst Maptwo = () => {\r\n\r\n  const [myData, setMyData] = useState([])\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const { data } = await axios.get('/api/workspaces')\r\n      setMyData(data)\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* {myData.map(iter => <h1 key={iter._id}>{iter.long}-{iter.lat}</h1>)}\r\n      {myData.map(iter => {\r\n          return <Marker key={iter._id} longitude={iter.long} latitude={iter.lat}>\r\n            <span onClick={() => setPopup(iter)}>\r\n              {iter}\r\n            </span>\r\n          </Marker>\r\n        })} */}\r\n    </>\r\n  )\r\n}\r\nexport default Maptwo"]},"metadata":{},"sourceType":"module"}